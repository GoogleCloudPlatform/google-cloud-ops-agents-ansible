---
- name: Validate agent_type
  assert:
    that: agent_type in ['monitoring', 'logging', 'ops-agent']
    msg: "Received invalid agent type: '{{ agent_type }}'. The Cloud Ops Ansible role supports the following agents: 'monitoring', 'logging' and 'ops-agent'."

- name: Validate package_state
  assert:
    that: package_state in ['present', 'absent']
    msg: "Received invalid package state: '{{ package_state }}'. The Cloud Ops Ansible role supports the following package states: 'present' and 'absent'."

- when: agent_type == 'ops-agent'
  block:
  - name: Ensure no additional config directory was specified
    assert:
      that: not additional_config_dir
      msg: 'The ops agent does not support additional configurations.'

  - name: Set ops-agent agent_type to its fully qualified name
    set_fact:
      agent_type: 'google-cloud-ops'

- name: Create temp directory
  tempfile:
    path: /tmp
    state: directory
    suffix: cloud_ops_shell_scripts
  register: tempfolder
  check_mode: no
  changed_when: false

- name: Download script
  get_url:
    url: "https://dl.google.com/cloudagents/add-{{ agent_type }}-agent-repo.sh"
    dest: "{{ tempfolder.path }}/add-{{ agent_type }}-agent-repo.sh"
    mode: 0755
  check_mode: no
  changed_when: false

- name: Add repo and install agent or remove repo and uninstall agent
  command:
    chdir: "{{ tempfolder.path }}"
    cmd: "bash add-{{ agent_type }}-agent-repo.sh {{ '--also-install' if package_state == 'present' else '--uninstall --remove-repo' }} --version={{ version }} {{ '--dry-run' if ansible_check_mode else '' }}"
  environment:
    REPO_CODENAME: "{{ ansible_distribution_release }}"
  register: result
  check_mode: no
  changed_when: "'No changes made.' not in result.stdout_lines"
  notify: "restart {{ agent_type }} agent"

- when: package_state == 'present'
  block:
  - name: Copy main config file onto the remote machine
    copy:
      src: "{{ main_config_file }}"
      dest: "{{ vars[agent_type + '_config_path'] }}"
      force: yes
      mode: 0644
      validate: "{{ vars[agent_type + '_validation_cmd'] }}"
    when: main_config_file
    notify: "restart {{ agent_type }} agent"

  - name: Copy additional configs onto the remote machine
    copy:
      src: "{{ item }}"
      dest: "{{ vars[agent_type + '_plugins_path'] }}"
      force: yes
      mode: 0644
      validate: "{{ vars[agent_type + '_validation_cmd'] }}"
    with_fileglob:
      - "{{ additional_config_dir }}/*.conf"
    when: additional_config_dir
    notify: "restart {{ agent_type }} agent"

- name: Remove temp directory
  file:
    path: "{{ tempfolder.path }}"
    state: absent
  check_mode: no
  changed_when: false
