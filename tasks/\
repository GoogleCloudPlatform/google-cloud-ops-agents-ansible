---
- name: Validate agent_type
  assert:
    that: agent_type in ['logging',  'ops-agent']
    msg: "Received invalid agent type: '{{ agent_type }}'. The Cloud Ops Ansible role supports the following agents for Windows: 'logging' and 'ops-agent'."

- name: Create temp directory
  win_tempfile:
    path: "/Users/{{ ansible_user }}/AppData/Local/Temp"
    state: directory
    suffix: _cloud_ops_shell_scripts
  register: tempfolder
  check_mode: false
  changed_when: false

- when: agent_type == 'ops-agent'
  block:
    - name: Download script
      win_get_url:
        url: "https://dl.google.com/cloudagents/add-google-cloud-ops-agent-repo.ps1"
        dest: "{{ tempfolder.path }}/add-google-cloud-ops-agent-repo.ps1"
      check_mode: false
      changed_when: false

    - name: Add repo and install agent or remove repo and uninstall agent
      win_shell: >
        .\\add-google-cloud-ops-agent-repo.ps1 {{ '-AlsoInstall' if package_state == 'present' else '-Uninstall -RemoveRepo' }} -Version {{ version }}
        {{ '-WhatIf' if ansible_check_mode else ''}}
      args:
        chdir: "{{ tempfolder.path }}"
      register: result
      check_mode: false
      changed_when: "'No changes made.' not in result.stdout_lines"
      notify: "restart windows {{ agent_type }} agent"

    - when: package_state == 'present'
      block:
        - name: Copy main config file onto the remote machine
          win_copy:
            src: "{{ main_config_file }}"
            dest: 'C:\Program Files\Google\Cloud Operations\Ops Agent\config\config.yaml'
            force: true
          when: main_config_file | length > 0
          notify: "restart windows {{ agent_type }} agent"

- when: agent_type == 'logging'
  block:
    - name: Check if agent is present
      win_shell: 'reg query HKLM\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\GoogleStackdriverLoggingAgent\ /v Version'
      changed_when: false
      register: result
      failed_when: false

    - when: package_state == 'present' and result.rc == 1
      block:
        - name: Download executable
          win_get_url:
            url: "https://dl.google.com/cloudagents/windows/StackdriverLogging-v1-14.exe"
            dest: "{{ tempfolder.path }}/StackdriverLogging-v1-14.exe"
          check_mode: false
          changed_when: false

        - name: Install agent
          win_package:
            product_id: "GoogleStackdriverLoggingAgent"
            path: "{{ tempfolder.path }}/StackdriverLogging-v1-14.exe"
            arguments: "/S /D=C:\\Program Files (x86)\\Stackdriver\\LoggingAgent{{ lookup('password', 'length=8 chars=ascii_letters') }}"
          notify: "restart windows {{ agent_type }} agent"

    - when: package_state == 'absent' and result.rc == 0
      block:
        - name: Get UninstallString
          win_shell: '"$(Get-ItemPropertyValue -Path HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\GoogleStackdriverLoggingAgent -Name UninstallString)"'
          register: uninstall_string

        - name: db
          debug:
            msg: "{{ uninstall_string.stdout_lines[0] }}"

        - name: Uninstall using win_shell
          win_shell: |
            $CMD = "{{ uninstall_string.stdout_lines[0] }}"
            $arg1 = '/S'
            & $CMD $arg1
            Start-Sleep -s 5
          register: uninstall_string

        - name: db
          debug:
            msg: "{{ uninstall_string.stdout_lines }}"

#        - name: Uninstall agent
#          win_package:
#            path: 'C:\Program Files (x86)\Stackdriver\GoogleStackdriverLoggingAgent\Uninstall.exe'
#            product_id: "GoogleStackdriverLoggingAgent"
#            arguments: '/S -ServiceName="StackdriverAgent"'
#            state: absent
#          register: res

#        - name: Uninstall agent
#          win_package:
#            path: "{{ uninstall_string.stdout_lines[0] }}"
#            product_id: auto
#            arguments: /S

    - when: package_state == 'present'
      block:
        - name: Copy main config file onto the remote machine
          win_copy:
            src: "{{ main_config_file }}"
            dest: 'C:\Program Files (x86)\Stackdriver\LoggingAgent\fluent.conf'
            force: true
          when: main_config_file | length > 0
          notify: "restart windows {{ agent_type }} agent"

        - name: Copy additional configs onto the remote machine
          win_copy:
            src: "{{ item }}"
            dest: 'C:\Program Files (x86)\Stackdriver\LoggingAgent\config.d'
            force: true
          with_fileglob:
            - "{{ additional_config_dir }}/*.conf"
          when: additional_config_dir | length > 0
          notify: "restart windows {{ agent_type }} agent"

- name: Remove temp directory
  win_file:
    path: "{{ tempfolder.path }}"
    state: absent
  check_mode: false
  changed_when: false
