---
- name: Create
  hosts: localhost
  connection: local

  tasks:
    - name: Create instances
      include_tasks: ./create_instance.yml
      loop: "{{ molecule_yml.platforms }}"

    - name: Populate instance config dict linux
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.name }}",
          'address': "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}",
          'user': "{{ molecule_yml.driver.ssh_user }}", }
#          'port': "{{ '22' if item.name | regex_search('windows') == None else '5986' }}",
#          'identity_file': "{{ molecule_yml.driver.ssh_key_file if item.name | regex_search('windows') == None else None }}", }
#          'connection': "{{ 'ssh' if item.name | regex_search('windows') == None else 'winrm' }}", }
      with_items: "{{ instance_created.instances }}"
      register: instance_config_dict
      when: instance_created.changed and item.name

#    - name: Populate instance config dict windows
#      set_fact:
#        instance_conf_dict: {
#          'instance': "{{ item.name }}",
#          'address': "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}",
#          'user': "{{ molecule_yml.driver.ssh_user }}",
#          'port': "5986",
#          'connection': "winrm", }
#      with_items: "{{ instance_created.instances }}"
#      register: instance_config_dict
#      test

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: instance_created.changed

    - name: Dump instance config
      copy:
        content: "{{ instance_conf | to_json | from_json }}"
        dest: "{{ molecule_instance_config }}"
      when: instance_created.changed

    - name: Sleep five minutes to allow GCP instances to spin up
      pause:
        minutes: 5
