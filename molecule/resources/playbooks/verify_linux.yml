---
- name: Set Service Name
  set_fact:
    service_name: "google-cloud-ops-agent{{'.target' if lookup('env', 'VERSION').split('.')[0] == '1' }}"
  when: agent_type == 'ops-agent'

- name: Set Service Name
  set_fact:
    service_name: stackdriver-agent
  when: agent_type == 'monitoring'

- name: Set Service Name
  set_fact:
    service_name: google-fluentd
  when: agent_type == 'logging'

- name: Include vars
  include_vars:
    file: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/vars/main.yml"

- name: Ensure the agent is present
  package:
    name: "{{ package_name }}"
    state: present
  register: result

- name: Assert the agent was already present
  assert:
    that: result.changed == false

- name: Ensure the agent is running
  service:
    name: "{{ service_name }}"
    state: started
  register: result
  when: (agent_type != 'ops-agent') or (agent_type == 'ops-agent' and lookup('env', 'VERSION').split('.')[0] == '1')

- name: Assert the agent was already running
  assert:
    that: result.changed == false
  when: (agent_type != 'ops-agent')

- name: Ensure the ops agent fluentbit agent is running
  service:
    name: "{{ service_name }}-fluent-bit.service"
    state: started
  register: result
  when: (agent_type == 'ops-agent' and lookup('env', 'VERSION').split('.')[0] != '1')

- name: Assert the ops agent fluentbit agent was already running
  assert:
    that: result.changed == false
  when: (agent_type == 'ops-agent' and lookup('env', 'VERSION').split('.')[0] != '1')

- name: Ensure the ops agent opentelemetry-collector is running
  service:
    name: "{{ service_name }}-opentelemetry-collector.service"
    state: started
  register: result
  when: (agent_type == 'ops-agent' and lookup('env', 'VERSION').split('.')[0] != '1')

- name: Assert the ops agent opentelemetry-collector was already running
  assert:
    that: result.changed == false
  when: (agent_type == 'ops-agent' and lookup('env', 'VERSION').split('.')[0] != '1')

- when: main_config_file | length > 0
  block:
    - name: Read config file
      command:
        cmd: "cat {{ vars[agent_type + '_config_path'] }}"
      register: result

    - name: Assert the custom config was copied properly
      assert:
        that: "'# Sample custom config.' in result.stdout"

- when: additional_config_dir | length > 0 and agent_type != 'ops-agent'
  block:
    - name: List contents of the plugin directory
      command:
        cmd: "ls {{ vars[agent_type + '_plugins_path'] }}"
      register: result

    - name: Assert the plugin config was copied properly
      assert:
        that: "'custom_config.conf' in result.stdout"

- name: Uninstall agent
  include_role:
    name: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | basename }}"
  vars:
    package_state: absent

- name: Ensure the agent is absent
  package:
    name: "{{ package_name }}"
    state: absent
  register: result

- name: Assert the agent was already absent
  assert:
    that: result.changed == false
